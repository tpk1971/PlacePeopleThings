name: CI - Build & Smoke tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Enable Docker BuildKit
        run: |
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      - name: Build and start stack with docker compose
        run: |
          docker compose up -d --build db api frontend

      - name: Wait for services to become healthy
        run: |
          set -e
          max_attempts=60
          attempt=0
          echo "Waiting for API and frontend to respond..."
          while [ $attempt -lt $max_attempts ]; do
            api_ok=0
            fe_ok=0
            if curl -fsS http://localhost:3000/api/health >/dev/null 2>&1; then
              api_ok=1
            fi
            if curl -fsS http://localhost:8080/ >/dev/null 2>&1; then
              fe_ok=1
            fi
            if [ $api_ok -eq 1 ] && [ $fe_ok -eq 1 ]; then
              echo "Both services are responding"
              break
            fi
            attempt=$((attempt+1))
            echo "Attempt $attempt/$max_attempts - services not ready yet"
            sleep 2
          done
          if [ $attempt -ge $max_attempts ]; then
            echo "Services did not become healthy in time"
            docker compose logs --no-color > compose-logs.txt || true
            exit 1
          fi

      - name: Make scripts executable
        run: |
          chmod +x ./scripts/smoke_test.sh || true

      - name: Run smoke tests
        run: |
          set -o pipefail
          ./scripts/smoke_test.sh | tee smoke-output.txt

      - name: Upload logs and output on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            compose-logs.txt
            smoke-output.txt

      - name: Tear down stack
        if: always()
        run: |
          docker compose down --volumes

